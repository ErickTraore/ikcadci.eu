{"remainingRequest":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/src/components/TodoListeMessages.vue?vue&type=style&index=0&id=316fdccd&scoped=true&lang=css&","dependencies":[{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/src/components/TodoListeMessages.vue","mtime":1638947027678},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/css-loader/dist/cjs.js","mtime":1631176189096},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631176190561},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/postcss-loader/src/index.js","mtime":1631176189504},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1631176188195},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/index.js","mtime":1631176189929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKICAgIC5ncm91cCB7CiAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsKICAgIH0KICAgIC5ncm91cF9faGVhZGVyX19ib2R5IHsKICAgICAgICBwYWRkaW5nOiAxcmVtOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDJyZW07CiAgICAgICAgbWFyZ2luLXRvcDogMXJlbTsKICAgICAgICBtYXJnaW4tYm90dG9tOiAxcmVtOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigzNSwgNDksIDgyKTsKICAgIH0KICAgIC5ncm91cF9faGVhZGVyX19ib2R5X19maXJzdCB7CiAgICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICAgIG1hcmdpbjogNXB4OwogICAgfQogICAgLmdyb3VwX19oZWFkZXJfX2JvZHlfX2ZpcnN0X19pbiB7CiAgICAgICAgZm9udC1zaXplOiAxMHB4OwoKCiAgICAgfQogICAgLmdyb3VwX19oZWFkZXJfX2JvZHlfX2ZpcnN0X19kb3duIHsKICAgICAgICBmb250LXNpemU6IDE0cHg7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTsKCgogICAgIH0KICAgICAuZ3JvdXBfX2hlYWRlcl9fYm9keV9fc2Vjb25kIHsKICAgICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgICAgLyogYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNCwgMTYxLCAxOCk7ICovCgogICAgfQogICAgLmxpa2UtYnV0dG9uc1tfbmdjb250ZW50LWNwYS1jNl0gewoKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgfQogICAgLmRpc2xpa2VzW19uZ2NvbnRlbnQtY3BhLWM2XSwgLmxpa2VzW19uZ2NvbnRlbnQtY3BhLWM2XSB7CiAgICAgICAgbWFyZ2luOiAwIC4zZW07CiAgICB9CiAgLnBvc2l0aW9uewogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwoKICB9CiAgLmxlZnR7CiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAKCiAgfQogIC5yaWdodHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwoKICB9CiAuc3Bhbkxpa2VzewpwYWRkaW5nOiAwcHggN3B4IDBweCA3cHg7CmJhY2tncm91bmQ6IHJnYigxMzQsIDIyOCwgMTM5KTsKYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7CgogfQogIC5zcGFuRGlzbGlrZXN7CnBhZGRpbmc6IDBweCA3cHggMHB4IDdweDsKYmFja2dyb3VuZDogcmdiKDIzMCwgMTIyLCAxMjIpOwpib3JkZXI6IHNvbGlkIDFweCBibGFjazsKIH0KIC5jb2xvclJlZHsKICAgY29sb3I6IHJlZDsKICAgZm9udC1zaXplOiA4cHg7CiAgIH0KICAgLmNvbnRhaW5lcnsKICAgIGJvcmRlcjogc29saWQgNXB4IHJnYigxODksIDE4MiwgMTgyKTsKICAgIGJhY2tncm91bmQ6IHJnYmEoMjQ4LCAyNDcsIDI0NywgMC44MDEpOwogICAgYm9yZGVyLXJhZGl1czogMjBweDsKICAgIG1hcmdpbjogNXB4OwogICB9CiAgIC5sYWJlbEZvcm0gewogICAgIGNvbG9yOndoaXRlOwogICB9CmltZyB7CiAgd2lkdGg6IDMwJTsKICBtYXJnaW46IGF1dG87CiAgZGlzcGxheTogYmxvY2s7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKfQoK"},{"version":3,"sources":["TodoListeMessages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoListeMessages.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <h3>Listes des messages</h3>\n   <form @submit=\"onPostData\" method=\"post\" enctype=\"multipart/form-data\" name=\"message\">\n\n        <div class=\"group__header__body\">\n            <div class=\"container\" v-for=\"item  in messages\" :key=\"item .id\">\n                  <div class=\"group__header__body__first\"> \n                              <div class=\"group__header__body__first__in\"> \n                                  <figure>\n                                  <img :src=\"item.attachment\" />\n                                  </figure>\n                                  <b>Mon id: {{ myId }}</b> <br>\n                                  <b>Mon messageUserId: {{ item.UserId}}</b> <br>\n                                  <b>{{ item .User.username }}</b> à écrit le\n                                  {{ new Date(item .createdAt) | dateFormat('DD/MM/YYYY') }} à\n                                  {{ new Date(item .createdAt) | dateFormat('hh:mm') }} : <br>\n                                  <b>{{ item .title }}</b><br>\n                                </div>\n                              \n                                <div class=\"group__header__body__first__down\"> \n                                  {{ item .content }}<br> \n                                </div>             \n                                <div _ngcontent-cpa-c6=\"\" class=\"position like-buttons group__header__body__second\">\n                                        <div class=\"left\">\n                                                <div _ngcontent-cpa-c6=\"\" class=\"likes\">\n                                                    <button id=\"dolike\"\n                                                            v-on:click=\"doLike(item .id)\">\n                                                        <i _ngcontent-cpa-c6=\"\" class=\"like fa-thumbs-up fa-lg far\"></i>\n                                                    </button>\n                                                    <span class=\"spanLikes\" _ngcontent-cpa-c6=\"\">{{ item .likes }}</span>\n\n                                                </div>\n                                                <div _ngcontent-cpa-c6=\"\" class=\"dislikes\">\n                                                    <button\n                                                            v-on:click=\"doDislike(item .id)\">\n                                                        <i _ngcontent-cpa-c6=\"\" class=\"dislike fa-thumbs-down fa-lg far\"></i>\n                                                    </button>\n                                                    <span class=\"spanDislikes\" _ngcontent-cpa-c6=\"\">{{ item .dislikes }}</span>\n                                                </div>\n                                        </div>\n                                        <div class=\"right\">\n                                                <div _ngcontent-cpa-c6=\"\" class=\"dislikes\">\n                                                    <button \n                                                    v-if=\"myId == item.UserId\" \n                                                    class=\"colorRed\"\n                                                    v-on:click=\"doDeleteMessages(item .id)\">\n                                                        Supprimer votre message\n                                                    </button>\n                                                </div>\n                                        </div>\n                                </div>\n                      \n                  </div>\n            </div>\n        </div>\n  </form>\n</div>\n</template>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.16/vue.js\"></script>\n<script>\n  import Vue from 'vue'\n  import axios from 'axios';\n  import VueAxios from 'vue-axios'\n  import VueFilterDateFormat from '@vuejs-community/vue-filter-date-format';\n  import FormData from 'form-data'\n  import { mapGetters } from 'vuex'\n  import TodoListeMessages from '../components/TodoListeMessages.vue'\n\n\n  // const path = require('path').\n   Vue.use(VueFilterDateFormat);\n   Vue.use(VueAxios, axios);\n  export default {\n    name: 'Home',\n    components: {\n      TodoListeMessages\n      },\n    computed: {\n      ...mapGetters([\"imageExist\"])\n,    },\n   \n    data() {\n      return {\n              myId:Number,\n              idImage: '',\n              testName:Boolean,\n              file:Blob,\n              errors: [],\n              message: {\n                id: '',\n                title: '',\n                content: '',\n                attachment: '',\n              },\n              image:'',\n              selectedFile: null,\n              messages: [],\n              likes: 0,\n              dislikes:0,\n              posts: {\n                  title:'',\n                  content: '',\n                  attachment:'' ,\n                  loading: false,\n          },\n      }\n    },\n    created() {\n\n       let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let myId = myStorageToken.myId;\n      axios\n        .get('http://localhost:3000/api/messages/')\n        .then(response => {\n          this.myId = myId\n          this.messages = response.data\n          })\n        \n        .catch(error => console.log(error()))\n    },\n\n  methods: {\n    \n    deleteMessage(index) {\n        // Retire 1 élément à la position index du tableau tasks\n        this.messages = this.messages.filter(function( message ) {\n          return message.id !== index;\n        });\n        // this.messages.splice(index, 1)\n      },\n    \n    resetForm() {\n        console.log('Reseting the form')\n        var self = this; //you need this because *this* will refer to Object.keys below`\n        // Iterate through each object field, key is name of the object field`\n        Object.keys(this.message).forEach(function(key,index) {\n          self.message[key] = '';\n        });\n      },\n    \n      doLike: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/' + id + '/vote/like', null, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        )\n          .then(() => {\n            axios\n              .get('http://localhost:3000/api/messages/')\n              .then(response => this.messages = response.data)\n              .catch(error => console.log(error()))\n\n          })\n          .catch(error => console.log(error()))\n      },\n      doDislike: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/' + id + '/vote/dislike', null, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        )\n          .then(() => {\n            axios\n              .get('http://localhost:3000/api/messages/')\n              .then(response => this.messages = response.data)\n              .catch(error => console.log(error()))\n          })\n          .catch(error => console.log(error()))\n      },\n    onPostData(e) {\n      \n      e.preventDefault();\n\n\n        this.errors = [];\n\n        if (!this.message.title) {\n          this.errors.push('Veillez saisir le titre');\n          }\n         else if (this.message.title.length >= 30 || this.message.title.length <= 3){\n          this.errors.push('Votre titre doit comprendre entre 4 et 30 caractères.');\n        }\n        if (!this.message.content) {\n          this.errors.push('Veillez saisir le message');\n        } else if (this.message.content.length >= 150 || this.message.content.length <= 3){\n          this.errors.push('Votre message doit contenir entre 4 et 150 caractères.');\n        }\n        if (!this.errors.length) {\n\n          console.log('Vérification des inputs --> OK')\n          return this.post(this.message);\n        }\n        // else return this.put(this.message);\n},\n        post: function (message, e) {\n\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n      \n        this.axios.post('http://localhost:3000/api/messages/new/', message, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        )\n         .then(reponse => {\n            this.message = reponse.data\n            axios\n              .get('http://localhost:3000/api/messages/')\n              .then(response => {\n                this.messages = response.data\n                this.resetForm()\n                this.delUpload()\n                })\n              .catch(error => {\n                console.log(error())\n              })\n          })\n      e.preventDefault();\n      },\n      onFileSelected(e) {\n         this.selectedFile = e.target.files[0];\n      var files = e.target.files || e.dataTransfer.files;\n      \n      if (!files.length)\n        return;\n      this.createImage(files[0]);\n    },\n    createImage(file, next) {\n      var image = new Image();\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = (e) => {\n        vm.image = e.target.result;\n      };\n      \n      reader.readAsDataURL(file);\n      if(this.image)\n        return; \n        this.pushImage();\n    },\n    pushImage(e) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n\n        const util = require('util');\n        var fileName = fileName;\n\n        var formData = new FormData();\n        var imagefile = document.querySelector('#file');\n        console.log('Mon imageFile[0] :',imagefile.files[0]);\n        formData.append(\"file\", imagefile.files[0]);\n      \n        axios.post('http://localhost:3000/api/messages/upload', formData, {\n          headers: {\n            'Authorization': token,\n            'Content-Type': 'multipart/form-data' \n          }\n      })   \n     .then((res) => {\n       console.log('valeure reçu par le back:',res.data);\n       console.log('valeure res.data.idImage:',res.data.idImage);\n\n          return res.data.idImage;\n     })\n     .then(function(idImage){\n      //  document.querySelector('#this.attachment').innerHTML = idImage\n\n       const attachment = document.querySelector(\"#attachment\");\n          attachment.value = \"http://localhost:3000/images/\"+idImage;\n\n          attachment.dispatchEvent(new Event('input'));\n\n          response.status(200).json({idImage})\n     })\n    .catch(function(err) {\n     err.statusCode = 401;\n                    });\n  },\n    removeImage: function(e) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        var fileName = this.selectedFile.name;\n        \n        console.log('Envoie dufichier pour écrasement',fileName);\n        var formData = new FormData();\n        formData.append(\"file\", this.selectedFile);\n\n        axios.post('http://localhost:3000/api/messages/delLienImage', formData, {\n          headers: {\n            'Authorization': token,\n            'Content-Type': 'multipart/form-data' \n          }\n      })  \n    this.delUpload()\n    }, \n    delUpload: function(e) {\n      this.image = '';\n      console.log('Le fichier vient d\\'être effacé du navigateur');\n      e.preventDefault();\n      }\n    ,\n    doDeleteMessages: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/' + id + '/del', null, {\n            headers: {\n              'Authorization': token\n            }\n          })\n              .then(response => {\n                \n                this.messages = response.data\n                \n\n                })\n              .catch(error => console.log(error()))\n\n                this.created()\n\n      }\n  }\n  }\n</script>\n\n<style scoped>\n    .group {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n    }\n    .group__header__body {\n        padding: 1rem;\n        border-radius: 2rem;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n        background-color: rgb(35, 49, 82);\n    }\n    .group__header__body__first {\n        height: 100%;\n        margin: 5px;\n    }\n    .group__header__body__first__in {\n        font-size: 10px;\n\n\n     }\n    .group__header__body__first__down {\n        font-size: 14px;\n        background-color:white;\n\n\n     }\n     .group__header__body__second {\n        height: 100%;\n        /* background-color: rgb(104, 161, 18); */\n\n    }\n    .like-buttons[_ngcontent-cpa-c6] {\n\n        display: flex;\n    }\n    .dislikes[_ngcontent-cpa-c6], .likes[_ngcontent-cpa-c6] {\n        margin: 0 .3em;\n    }\n  .position{\n        display: flex;\n        justify-content: space-between;\n\n  }\n  .left{\n        display: flex;\n        \n\n  }\n  .right{\n        display: flex;\n\n  }\n .spanLikes{\npadding: 0px 7px 0px 7px;\nbackground: rgb(134, 228, 139);\nborder: solid 1px black;\n\n }\n  .spanDislikes{\npadding: 0px 7px 0px 7px;\nbackground: rgb(230, 122, 122);\nborder: solid 1px black;\n }\n .colorRed{\n   color: red;\n   font-size: 8px;\n   }\n   .container{\n    border: solid 5px rgb(189, 182, 182);\n    background: rgba(248, 247, 247, 0.801);\n    border-radius: 20px;\n    margin: 5px;\n   }\n   .labelForm {\n     color:white;\n   }\nimg {\n  width: 30%;\n  margin: auto;\n  display: block;\n  margin-bottom: 10px;\n}\n\n</style>"]}]}