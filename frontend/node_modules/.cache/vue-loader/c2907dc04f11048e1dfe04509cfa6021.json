{"remainingRequest":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/src/views/Picture.vue?vue&type=style&index=0&id=422504b4&scoped=true&lang=css&","dependencies":[{"path":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/src/views/Picture.vue","mtime":1637038892926},{"path":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/css-loader/dist/cjs.js","mtime":1631176189096},{"path":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631176190561},{"path":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/postcss-loader/src/index.js","mtime":1631176189504},{"path":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1631176188195},{"path":"/Users/traore/Sites/oc/porteFolio/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/index.js","mtime":1631176189929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmRpdi5wcmV2aWV3LWltYWdlcyA+IGltZyB7CiAgd2lkdGg6IDMwJTsKfQo="},{"version":3,"sources":["Picture.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyKA;AACA;AACA","file":"Picture.vue","sourceRoot":"src/views","sourcesContent":["<template>\n        <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-sm-8 mt-3\">\n                    <h4>Node.js upload images - bezkoder.com</h4>\n\n                    <form\n                        class=\"mt-4\"\n                        action=\"/upload\"\n                        method=\"POST\"\n                        enctype=\"multipart/form-data\"\n                    >\n                        <div class=\"form-group\">\n                        <input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"input-files\"\n                            class=\"form-control-file border\"\n                        />\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                    </form>\n                    </div>\n                </div>\n                <hr />\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                    <div class=\"preview-images\"></div>\n                    </div>\n                </div>\n        </div> \n</template>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js\"></script>\n    <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.16/vue.js\"></script>\n<script>\n  import Vue from 'vue'\n  import axios from 'axios';\n  import VueAxios from 'vue-axios'\n  import VueFilterDateFormat from '@vuejs-community/vue-filter-date-format';\n\n  Vue.use(VueFilterDateFormat);\n  Vue.use(VueAxios, axios)\n  export default {\n    data() {\n      return {\n        messages: [],\n        likes: 0,\n        dislikes:0,\n        posts: {\n          title: null,\n          content: null,\n          loading: false\n          },\n      }\n    },\n    created() {\n      axios\n        .get('http://localhost:3000/api/messages/')\n        .then(response => {\n          this.messages = response.data\n\n          })\n        \n        .catch(error => console.log(error()))\n    },\n\n  methods: {\n    \n      doLike: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/' + id + '/vote/like', null, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        )\n          .then(() => {\n            axios\n              .get('http://localhost:3000/api/messages/')\n              .then(response => this.messages = response.data)\n              .catch(error => console.log(error()))\n\n          })\n          .catch(error => console.log(error()))\n      },\n      doDislike: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/' + id + '/vote/dislike', null, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        )\n          .then(() => {\n            axios\n              .get('http://localhost:3000/api/messages/')\n              .then(response => this.messages = response.data)\n              .catch(error => console.log(error()))\n          })\n          .catch(error => console.log(error()))\n      },\n      postData(e) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/new/', this.posts, {\n            headers: {\n              'Authorization': token\n            }\n          }\n        )\n          .then(() => {\n            this.posts = {\n              title: null,\n              content: null,\n            };\n            axios\n              .get('http://localhost:3000/api/messages/')\n              .then(response => this.messages = response.data)\n              .catch(error => console.log(error()))\n          })\n          .catch(error => console.log(error()))\n\n        e.preventDefault();\n      },  \n      doDelete: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/messages/' + id + '/del', null, {\n            headers: {\n              'Authorization': token\n            }\n          })\n              .then(response => this.messages = response.data)\n              .catch(error => console.log(error()))\n      },\n    }\n  }\n</script>\n    <script>\n    //   $(document).ready(function() {\n    //     // let imagesPreview = function(input, placeToInsertImagePreview) \n    //     {\n    //     //   if (input.files) {\n    //     //     // let filesAmount = input.files.length;\n    //     //     // for (i = 0; i < filesAmount; i++) {\n    //     //     //   let reader = new FileReader();\n    //     //     //   reader.onload = function(event) {\n    //     //     //     $($.parseHTML(\"<img>\"))\n    //     //     //       .attr(\"src\", event.target.result)\n    //     //     //       .appendTo(placeToInsertImagePreview);\n    //     //     //   };\n    //     //     //   reader.readAsDataURL(input.files[i]);\n    //     //     // }\n    //     //   }\n    //     };\n    //     // $(\"#input-files\").on(\"change\", function() {\n    //     //   imagesPreview(this, \"div.preview-images\");\n    //     // });\n    //   });\n    </script>\n   <style scoped>\n\n      div.preview-images > img {\n        width: 30%;\n      }\n    </style>"]}]}