{"remainingRequest":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/src/views/Compte.vue?vue&type=style&index=0&id=0aa0687a&scoped=true&lang=css&","dependencies":[{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/src/views/Compte.vue","mtime":1638193617698},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/css-loader/dist/cjs.js","mtime":1631176189096},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1631176190561},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/postcss-loader/src/index.js","mtime":1631176189504},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1631176188195},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar/frontend/node_modules/vue-loader/lib/index.js","mtime":1631176189929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyb3VwIHsKICAgIGhlaWdodDogMTAwJTsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7Cn0KLmdyb3VwX19oZWFkZXJfX2JvZHkgewogICAgcGFkZGluZzogMXJlbTsKICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTQsIDE0LCAxNSwgMC4yMDUpOwogICAgYm9yZGVyLXJhZGl1czogMnJlbTsKICAgIG1hcmdpbi10b3A6IDFyZW07CiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOwp9Ci5saWtlLWJ1dHRvbnNbX25nY29udGVudC1jcGEtYzZdIHsKICAgIGRpc3BsYXk6IGZsZXg7Cn0KLmRpc2xpa2VzW19uZ2NvbnRlbnQtY3BhLWM2XSwgLmxpa2VzW19uZ2NvbnRlbnQtY3BhLWM2XSB7CiAgICBtYXJnaW46IDAgLjNlbTsKfQoK"},{"version":3,"sources":["Compte.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Compte.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div id=\"app\">\n        <div class='group__header__body'>\n\n            <div v-for=\"item  in users\" :key=\"item .id\">\n            <!-- <div v-for=\"item  in messages | paginate\" :key=\"item .id\"> -->\n              <!-- <tr v-for=\"item in items | paginate\"> -->\n                <div  _ngcontent-cpa-c6=\"\">\n                    Compte crée le:{{ new Date(item .createdAt) | dateFormat('DD/MM/YYYY') }} à\n                    {{ new Date(item .createdAt) | dateFormat('hh:mm') }} : <br>\n                     dernière maj le:{{ new Date(item .updatedAt) | dateFormat('DD/MM/YYYY') }} à\n                    {{ new Date(item .updatedAt) | dateFormat('hh:mm') }} : <br>\n                    <b>{{ item .username }}</b><br>\n                    <b>{{ item .email }}</b><br>\n                     <button\n                          @click=\"destroyUser(item .id)\">\n                            Supprimer  utilisateur n°{{item.id }}                   \n                     </button>                 <!-- <u>Nombre de like:</u> {{ message.likes }} -->\n                </div>\n        \n            </div>\n        </div>\n    </div>\n</template>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.16/vue.js\"></script>\n<script>\n  import Vue from 'vue'\n  import axios from 'axios';\n  import VueAxios from 'vue-axios'\n  import VueFilterDateFormat from '@vuejs-community/vue-filter-date-format';\n\n  Vue.use(VueFilterDateFormat);\n  Vue.use(VueAxios, axios)\n  export default {\n    data() {\n      return {\n        users: [],\n      }\n    },\n    created() {\n      axios\n        .get('http://localhost:3000/api/users/')\n        .then(response => {\n          this.users= response.data\n          })\n        .catch(error => console.log(error()))\n    },\n     methods: {\n     destroyUser: function (id) {\n        let objMySession = localStorage.getItem(\"obj\")\n        let myStorageToken = JSON.parse(objMySession)\n        let token = myStorageToken.myToken;\n        this.axios.post('http://localhost:3000/api/users/' + id + '/del', null, {\n            headers: {\n              'Authorization': token\n            }\n          })\n              .then(response => this.users = response.data)\n              .catch(error => console.log(error()))\n\n          .catch(error => console.log(error()))\n      }\n   }\n  }\n</script>\n<style scoped>\n    .group {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n    }\n    .group__header__body {\n        padding: 1rem;\n        background-color: rgba(14, 14, 15, 0.205);\n        border-radius: 2rem;\n        margin-top: 1rem;\n        margin-bottom: 1rem;\n    }\n    .like-buttons[_ngcontent-cpa-c6] {\n        display: flex;\n    }\n    .dislikes[_ngcontent-cpa-c6], .likes[_ngcontent-cpa-c6] {\n        margin: 0 .3em;\n    }\n \n</style>"]}]}