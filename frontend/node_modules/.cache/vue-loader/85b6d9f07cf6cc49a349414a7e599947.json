{"remainingRequest":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/src/views/Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/src/views/Home.vue","mtime":1640534009752},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1631176188195},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1631176190633},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1631176188195},{"path":"/Users/traore/Sites/oc/P7/P7-groupomania/laura/p7_babacar_copie/frontend/node_modules/vue-loader/lib/index.js","mtime":1631176189929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}